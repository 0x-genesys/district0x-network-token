["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$day8.re-frame.async-flow-fx","~:imports",null,"~:requires",["^ ","~$re-frame","~$re-frame.core","^:","^:","~$set","~$clojure.set","^<","^<","~$day8.re-frame.forward-events-fx","^="],"~:uses",null,"~:defs",["^ ","~$seen-all-of?",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/matus/www/district0x/contribution/test-compiled/day8/re_frame/async_flow_fx.cljs","~:line",8,"~:column",7,"~:end-line",8,"~:end-column",19,"~:arglists",["~#list",["~$quote",["^I",[["~$required-events","~$seen-events"]]]]]],"^5","~$day8.re-frame.async-flow-fx/seen-all-of?","~:variadic",false,"^C","test-compiled/day8/re_frame/async_flow_fx.cljs","^G",19,"~:method-params",["^I",[["^K","^L"]]],"~:protocol-impl",null,"~:arglists-meta",["^I",[null,null]],"^E",1,"^D",8,"^F",8,"~:max-fixed-arity",2,"~:fn-var",true,"^H",["^I",["^J",["^I",[["^K","^L"]]]]]],"~$seen-any-of?",["^ ","^A",null,"^B",["^ ","^C","/Users/matus/www/district0x/contribution/test-compiled/day8/re_frame/async_flow_fx.cljs","^D",13,"^E",7,"^F",13,"^G",19,"^H",["^I",["^J",["^I",[["^K","^L"]]]]]],"^5","~$day8.re-frame.async-flow-fx/seen-any-of?","^N",false,"^C","test-compiled/day8/re_frame/async_flow_fx.cljs","^G",19,"^O",["^I",[["^K","^L"]]],"^P",null,"^Q",["^I",[null,null]],"^E",1,"^D",13,"^F",13,"^R",2,"^S",true,"^H",["^I",["^J",["^I",[["^K","^L"]]]]]],"~$startable-rules",["^ ","^A",null,"^B",["^ ","^C","/Users/matus/www/district0x/contribution/test-compiled/day8/re_frame/async_flow_fx.cljs","^D",18,"^E",7,"^F",18,"^G",22,"^H",["^I",["^J",["^I",[["~$rules","~$now-seen-events","~$rules-fired"]]]]],"~:doc","Given the accumulated set of seen events and the set of rules already started,\n  return the list of rules which should now be started"],"^5","~$day8.re-frame.async-flow-fx/startable-rules","^N",false,"^C","test-compiled/day8/re_frame/async_flow_fx.cljs","^G",22,"^O",["^I",[["^W","^X","^Y"]]],"^P",null,"^Q",["^I",[null,null]],"^E",1,"^D",18,"^F",18,"^R",3,"^S",true,"^H",["^I",["^J",["^I",[["^W","^X","^Y"]]]]],"^Z","Given the accumulated set of seen events and the set of rules already started,\n  return the list of rules which should now be started"],"~$map-when->fn",["^ ","^5","~$day8.re-frame.async-flow-fx/map-when->fn","^C","test-compiled/day8/re_frame/async_flow_fx.cljs","^D",26,"^E",1,"^F",26,"^G",18,"^B",["^ ","^C","/Users/matus/www/district0x/contribution/test-compiled/day8/re_frame/async_flow_fx.cljs","^D",26,"^E",6,"^F",26,"^G",18]],"~$when->fn",["^ ","^A",null,"^B",["^ ","^C","/Users/matus/www/district0x/contribution/test-compiled/day8/re_frame/async_flow_fx.cljs","^D",31,"^E",7,"^F",31,"^G",15,"^H",["^I",["^J",["^I",[["~$when-kw"]]]]]],"^5","~$day8.re-frame.async-flow-fx/when->fn","^N",false,"^C","test-compiled/day8/re_frame/async_flow_fx.cljs","^G",15,"^O",["^I",[["^13"]]],"^P",null,"^Q",["^I",[null,null]],"^E",1,"^D",31,"^F",31,"^R",1,"^S",true,"^H",["^I",["^J",["^I",[["^13"]]]]]],"~$massage-rules",["^ ","^A",null,"^B",["^ ","^C","/Users/matus/www/district0x/contribution/test-compiled/day8/re_frame/async_flow_fx.cljs","^D",37,"^E",7,"^F",37,"^G",20,"^H",["^I",["^J",["^I",[["^W"]]]]],"^Z","Massage the supplied rules as follows:\n    - replace `:when` keyword value with a function implementing the predicate\n    - ensure that only `:dispatch` or `:dispatch-n` is provided\n    - add a unique :id, if one not already present"],"^5","~$day8.re-frame.async-flow-fx/massage-rules","^N",false,"^C","test-compiled/day8/re_frame/async_flow_fx.cljs","^G",20,"^O",["^I",[["^W"]]],"^P",null,"^Q",["^I",[null,null]],"^E",1,"^D",37,"^F",37,"^R",1,"^S",true,"^H",["^I",["^J",["^I",[["^W"]]]]],"^Z","Massage the supplied rules as follows:\n    - replace `:when` keyword value with a function implementing the predicate\n    - ensure that only `:dispatch` or `:dispatch-n` is provided\n    - add a unique :id, if one not already present"],"~$make-flow-event-handler",["^ ","^A",null,"^B",["^ ","^C","/Users/matus/www/district0x/contribution/test-compiled/day8/re_frame/async_flow_fx.cljs","^D",59,"^E",7,"^F",59,"^G",30,"^H",["^I",["^J",["^I",[[["^ ","~:keys",["~$id","~$db-path","^W","~$first-dispatch"]]]]]]],"^Z","Given a flow definitiion, returns an event handler which implements this definition"],"^5","~$day8.re-frame.async-flow-fx/make-flow-event-handler","^N",false,"^C","test-compiled/day8/re_frame/async_flow_fx.cljs","^G",30,"^O",["^I",[["~$p__25093"]]],"^P",null,"^Q",["^I",[null,null]],"^E",1,"^D",59,"^F",59,"^R",1,"^S",true,"^H",["^I",["^J",["^I",[[["^ ","^18",["^19","^1:","^W","^1;"]]]]]]],"^Z","Given a flow definitiion, returns an event handler which implements this definition"],"~$ensure-has-id",["^ ","^A",null,"^B",["^ ","^C","/Users/matus/www/district0x/contribution/test-compiled/day8/re_frame/async_flow_fx.cljs","^D",131,"^E",8,"^F",131,"^G",21,"~:private",true,"^H",["^I",["^J",["^I",[["~$flow"]]]]],"^Z","Ensure `flow` has an id.\n\tReturn a vector of [id flow]"],"^1?",true,"^5","~$day8.re-frame.async-flow-fx/ensure-has-id","^N",false,"^C","test-compiled/day8/re_frame/async_flow_fx.cljs","^G",21,"^O",["^I",[["^1@"]]],"^P",null,"^Q",["^I",[null,null]],"^E",1,"^D",131,"^F",131,"^R",1,"^S",true,"^H",["^I",["^J",["^I",[["^1@"]]]]],"^Z","Ensure `flow` has an id.\n\tReturn a vector of [id flow]"],"~$flow->handler",["^ ","^A",null,"^B",["^ ","^C","/Users/matus/www/district0x/contribution/test-compiled/day8/re_frame/async_flow_fx.cljs","^D",144,"^E",7,"^F",144,"^G",20,"^H",["^I",["^J",["^I",[["^1@"]]]]],"^Z","Action the given flow effect"],"^5","~$day8.re-frame.async-flow-fx/flow->handler","^N",false,"^C","test-compiled/day8/re_frame/async_flow_fx.cljs","^G",20,"^O",["^I",[["^1@"]]],"^P",null,"^Q",["^I",[null,null]],"^E",1,"^D",144,"^F",144,"^R",1,"^S",true,"^H",["^I",["^J",["^I",[["^1@"]]]]],"^Z","Action the given flow effect"]],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:seen?","~:halt-flow","~:unregister","~:seen-all-of?","~:first-dispatch","~:rules-fired","~:else","~:when","~:db","~:seen-events","~:events","~:forward-events","~:dispatch-n","~:db-path","~:deregister-event-handler","~:rules","~:dispatch-to","~:setup","~:dispatch","~:seen-both?","~:register","~:id","~:seen-any-of?","~:error","~:halt?","~:async-flow"]],"~:order",["^1N","^1Q","^20","^1G","^1Z","^1J","^21","^22","^1Y","^1S","^23","^1M","^1T","^1V","^1K","^1P","^1L","^1O","^1X","^1R","^1[","^1W","^1H","^1U","^1I","^24"]],"^Z",null]