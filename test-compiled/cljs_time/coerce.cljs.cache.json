["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",["~$second","~$extend"]],"~:name","~$cljs-time.coerce","~:imports",["^ ","~$UtcDateTime","~$goog.date.UtcDateTime"],"~:requires",["^ ","~$cljs-time.core","^=","~$time-fmt","~$cljs-time.format","^?","^?","^:","^;"],"~:uses",["^ ","~$from-default-time-zone","^=","~$minute","^=","~$hour","^=","~$day","^=","~$date-time","^=","^5","^=","~$month","^=","~$year","^=","~$milli","^="],"~:defs",["^ ","~$to-local-date",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/matus/www/district0x/contribution/test-compiled/cljs_time/coerce.cljs","~:line",67,"~:column",7,"~:end-line",67,"~:end-column",20,"~:arglists",["~#list",["~$quote",["^S",[["~$obj"]]]]],"~:doc","Convert `obj` to a goog.date.Date instance"],"^7","~$cljs-time.coerce/to-local-date","~:variadic",false,"^M","test-compiled/cljs_time/coerce.cljs","^Q",20,"~:method-params",["^S",[["^U"]]],"~:protocol-impl",null,"~:arglists-meta",["^S",[null,null]],"^O",1,"^N",67,"^P",67,"~:max-fixed-arity",1,"~:fn-var",true,"^R",["^S",["^T",["^S",[["^U"]]]]],"^V","Convert `obj` to a goog.date.Date instance"],"~$to-long",["^ ","^K",null,"^L",["^ ","^M","/Users/matus/www/district0x/contribution/test-compiled/cljs_time/coerce.cljs","^N",44,"^O",7,"^P",44,"^Q",14,"^R",["^S",["^T",["^S",[["^U"]]]]],"^V","Convert `obj` to the number of milliseconds after the Unix epoch."],"^7","~$cljs-time.coerce/to-long","^X",false,"^M","test-compiled/cljs_time/coerce.cljs","^Q",14,"^Y",["^S",[["^U"]]],"^Z",null,"^[",["^S",[null,null]],"^O",1,"^N",44,"^P",44,"^10",1,"^11",true,"^R",["^S",["^T",["^S",[["^U"]]]]],"^V","Convert `obj` to the number of milliseconds after the Unix epoch."],"~$from-date",["^ ","^K",null,"^L",["^ ","^M","/Users/matus/www/district0x/contribution/test-compiled/cljs_time/coerce.cljs","^N",38,"^O",7,"^P",38,"^Q",16,"^R",["^S",["^T",["^S",[["~$date"]]]]],"^V","Returns a DateTime instance in the UTC time zone corresponding to the given\n  js Date object."],"^7","~$cljs-time.coerce/from-date","^X",false,"^M","test-compiled/cljs_time/coerce.cljs","^Q",16,"^Y",["^S",[["^15"]]],"^Z",null,"^[",["^S",[null,null]],"^O",1,"^N",38,"^P",38,"^10",1,"^11",true,"^R",["^S",["^T",["^S",[["^15"]]]]],"^V","Returns a DateTime instance in the UTC time zone corresponding to the given\n  js Date object."],"~$to-local-date-time",["^ ","^K",null,"^L",["^ ","^M","/Users/matus/www/district0x/contribution/test-compiled/cljs_time/coerce.cljs","^N",74,"^O",7,"^P",74,"^Q",25,"^R",["^S",["^T",["^S",[["^U"]]]]],"^V","Convert `obj` to a goog.date.DateTime instance"],"^7","~$cljs-time.coerce/to-local-date-time","^X",false,"^M","test-compiled/cljs_time/coerce.cljs","^Q",25,"^Y",["^S",[["^U"]]],"^Z",null,"^[",["^S",[null,null]],"^O",1,"^N",74,"^P",74,"^10",1,"^11",true,"^R",["^S",["^T",["^S",[["^U"]]]]],"^V","Convert `obj` to a goog.date.DateTime instance"],"~$from-string",["^ ","^K",null,"^L",["^ ","^M","/Users/matus/www/district0x/contribution/test-compiled/cljs_time/coerce.cljs","^N",28,"^O",7,"^P",28,"^Q",18,"^R",["^S",["^T",["^S",[["~$s"]]]]],"^V","Returns DateTime instance from string using formatters in cljs-time.format,\n  returning first which parses"],"^7","~$cljs-time.coerce/from-string","^X",false,"^M","test-compiled/cljs_time/coerce.cljs","^Q",18,"^Y",["^S",[["~$s"]]],"^Z",null,"^[",["^S",[null,null]],"^O",1,"^N",28,"^P",28,"^10",1,"^11",true,"^R",["^S",["^T",["^S",[["~$s"]]]]],"^V","Returns DateTime instance from string using formatters in cljs-time.format,\n  returning first which parses"],"~$to-string",["^ ","^K",null,"^L",["^ ","^M","/Users/matus/www/district0x/contribution/test-compiled/cljs_time/coerce.cljs","^N",59,"^O",7,"^P",59,"^Q",16,"^R",["^S",["^T",["^S",[["^U"]]]]],"^V","Returns a string representation of obj in UTC time-zone\n  using \"yyyy-MM-dd'T'HH:mm:ss.SSSZZ\" date-time representation."],"^7","~$cljs-time.coerce/to-string","^X",false,"^M","test-compiled/cljs_time/coerce.cljs","^Q",16,"^Y",["^S",[["^U"]]],"^Z",null,"^[",["^S",[null,null]],"^O",1,"^N",59,"^P",59,"^10",1,"^11",true,"^R",["^S",["^T",["^S",[["^U"]]]]],"^V","Returns a string representation of obj in UTC time-zone\n  using \"yyyy-MM-dd'T'HH:mm:ss.SSSZZ\" date-time representation."],"~$to-date",["^ ","^K",null,"^L",["^ ","^M","/Users/matus/www/district0x/contribution/test-compiled/cljs_time/coerce.cljs","^N",54,"^O",7,"^P",54,"^Q",14,"^R",["^S",["^T",["^S",[["^U"]]]]],"^V","Convert `obj` to a JavaScript Date instance."],"^7","~$cljs-time.coerce/to-date","^X",false,"^M","test-compiled/cljs_time/coerce.cljs","^Q",14,"^Y",["^S",[["^U"]]],"^Z",null,"^[",["^S",[null,null]],"^O",1,"^N",54,"^P",54,"^10",1,"^11",true,"^R",["^S",["^T",["^S",[["^U"]]]]],"^V","Convert `obj` to a JavaScript Date instance."],"~$from-long",["^ ","^K",null,"^L",["^ ","^M","/Users/matus/www/district0x/contribution/test-compiled/cljs_time/coerce.cljs","^N",22,"^O",7,"^P",22,"^Q",16,"^R",["^S",["^T",["^S",[["~$millis"]]]]],"^V","Returns a DateTime instance in the UTC time zone corresponding to the given\n  number of milliseconds after the Unix epoch."],"^7","~$cljs-time.coerce/from-long","^X",false,"^M","test-compiled/cljs_time/coerce.cljs","^Q",16,"^Y",["^S",[["^1@"]]],"^Z",null,"^[",["^S",[null,null]],"^O",1,"^N",22,"^P",22,"^10",1,"^11",true,"^R",["^S",["^T",["^S",[["^1@"]]]]],"^V","Returns a DateTime instance in the UTC time zone corresponding to the given\n  number of milliseconds after the Unix epoch."],"~$ICoerce",["^ ","^L",["^ ","^M","/Users/matus/www/district0x/contribution/test-compiled/cljs_time/coerce.cljs","^N",19,"^O",14,"^P",19,"^Q",21,"^V",null,"~:protocol-symbol",true,"~:jsdoc",["^S",["@interface"]],"~:protocol-info",["^ ","~:methods",["^ ","~$to-date-time",[["^U"]]]]],"^1C",true,"^7","~$cljs-time.coerce/ICoerce","^M","test-compiled/cljs_time/coerce.cljs","^Q",21,"^O",1,"^N",19,"^1E",["^ ","^1F",["^ ","^1G",[["^U"]]]],"~:info",null,"^P",19,"~:impls",["^4",[null,"~$js/Date","~$goog/date.DateTime","~$number","~$goog/date.Date","~$string","~$goog/date.UtcDateTime"]],"^V",null,"^1D",["^S",["@interface"]]],"^1G",["^ ","^K",null,"^L",["^ ","^M","/Users/matus/www/district0x/contribution/test-compiled/cljs_time/coerce.cljs","^N",20,"^O",4,"^P",20,"^Q",16,"~:protocol","^1H","^V","Convert `obj` to a goog.date.DateTime instance.","^R",["^S",["^T",["^S",[["^U"]]]]]],"^1Q","^1H","^7","~$cljs-time.coerce/to-date-time","^X",false,"^M","test-compiled/cljs_time/coerce.cljs","^Q",16,"^Y",["^S",[["^U"]]],"^Z",null,"^[",["^S",[null,null]],"^O",1,"^N",19,"^P",20,"^10",1,"^11",true,"^R",["^S",["^T",["^S",[["^U"]]]]],"^V","Convert `obj` to a goog.date.DateTime instance."],"~$to-epoch",["^ ","^K",null,"^L",["^ ","^M","/Users/matus/www/district0x/contribution/test-compiled/cljs_time/coerce.cljs","^N",49,"^O",7,"^P",49,"^Q",15,"^R",["^S",["^T",["^S",[["^U"]]]]],"^V","Convert `obj` to Unix epoch."],"^7","~$cljs-time.coerce/to-epoch","^X",false,"^M","test-compiled/cljs_time/coerce.cljs","^Q",15,"^Y",["^S",[["^U"]]],"^Z",null,"^[",["^S",[null,null]],"^O",1,"^N",49,"^P",49,"^10",1,"^11",true,"^R",["^S",["^T",["^S",[["^U"]]]]],"^V","Convert `obj` to Unix epoch."]],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:date-time","~:else"]],"~:order",["^1Y","^1X"]],"^V","### Utilites to coerce goog.data DateTime instances to and from\n  various other types.\n\n  For example, to convert a goog.date DateTime to and from a js number:\n\n    => (to-long (date-time 1998 4 25))\n    893462400000\n\n    => (from-long 893462400000)\n    #<19980425T000000>"]