["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",["~$*print-fn*"]],"~:name","~$print.foo","~:imports",null,"~:requires",["^ ","~$str","~$clojure.string","^;","^;","~$pp","~$cljs.pprint","^=","^="],"~:uses",null,"~:defs",["^ ","~$get-miliseconds",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/matus/www/district0x/contribution/test-compiled/print/foo.cljc","~:line",137,"~:column",7,"~:end-line",137,"~:end-column",22,"~:arglists",["~#list",["~$quote",["^I",[[]]]]]],"^6","~$print.foo/get-miliseconds","~:variadic",false,"^C","test-compiled/print/foo.cljc","^G",22,"~:method-params",["^I",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^I",[null,null]],"^E",1,"^D",137,"^F",137,"~:max-fixed-arity",0,"~:fn-var",true,"^H",["^I",["^J",["^I",[[]]]]]],"~$parse-list",["^ ","^6","~$print.foo/parse-list","^C","test-compiled/print/foo.cljc","^D",68,"^E",1,"^F",68,"^G",21,"^B",["^ ","^C","/Users/matus/www/district0x/contribution/test-compiled/print/foo.cljc","^D",68,"^E",11,"^F",68,"^G",21]],"~$resolves-to-fn?",["^ ","^A",null,"^B",["^ ","^C","/Users/matus/www/district0x/contribution/test-compiled/print/foo.cljc","^D",54,"^E",17,"^F",54,"^G",32,"~:private",true,"^H",["^I",["^J",["^I",[["~$x"]]]]]],"^U",true,"^6","~$print.foo/resolves-to-fn?","^L",false,"^C","test-compiled/print/foo.cljc","^G",32,"^M",["^I",[["~$x"]]],"^N",null,"^O",["^I",[null,null]],"^E",1,"^D",54,"^F",54,"^P",1,"^Q",true,"^H",["^I",["^J",["^I",[["~$x"]]]]]],"~$tap",["^ ","^6","~$print.foo/tap","^C","test-compiled/print/foo.cljc","^D",50,"^E",1,"^F",50,"^G",9,"^B",["^ ","^C","/Users/matus/www/district0x/contribution/test-compiled/print/foo.cljc","^D",50,"^E",6,"^F",50,"^G",9],"~:doc","Quicker-to-type version of `print-and-return` with \" *** \" appended to the front"],"~$expand-arg",["^ ","^A",null,"^B",["^ ","^C","/Users/matus/www/district0x/contribution/test-compiled/print/foo.cljc","^D",35,"^E",17,"^F",35,"^G",27,"^U",true,"^H",["^I",["^J",["^I",[["~$arg"]]]]]],"^U",true,"^6","~$print.foo/expand-arg","^L",false,"^C","test-compiled/print/foo.cljc","^G",27,"^M",["^I",[["^["]]],"^N",null,"^O",["^I",[null,null]],"^E",1,"^D",35,"^F",35,"^P",1,"^Q",true,"^H",["^I",["^J",["^I",[["^["]]]]]],"~$interleave-middlewares",["^ ","^A",null,"^B",["^ ","^C","/Users/matus/www/district0x/contribution/test-compiled/print/foo.cljc","^D",166,"^E",17,"^F",166,"^G",39,"^U",true,"^H",["^I",["^J",["^I",[["~$handler","~$middlewares",["^ ","~:keys",["~$get-in","~$timings?"],"~:or",["^ ","^15",[],"^16",false]]]]]]]],"^U",true,"^6","~$print.foo/interleave-middlewares","^L",false,"^C","test-compiled/print/foo.cljc","^G",39,"^M",["^I",[["^12","^13","~$p__25280"]]],"^N",null,"^O",["^I",[null,null]],"^E",1,"^D",166,"^F",166,"^P",3,"^Q",true,"^H",["^I",["^J",["^I",[["^12","^13",["^ ","^14",["^15","^16"],"^17",["^ ","^15",[],"^16",false]]]]]]]],"~$wrap-middleware-debugging",["^ ","^A",null,"^B",["^ ","^C","/Users/matus/www/district0x/contribution/test-compiled/print/foo.cljc","^D",141,"^E",7,"^F",141,"^G",32,"^H",["^I",["^J",["^I",[["^12","~$middleware-name",["^ ","^14",["^15","~$summarize?","^16"],"^17",["^ ","^15",[],"^1<",true,"^16",false]]]]]]]],"^6","~$print.foo/wrap-middleware-debugging","^L",false,"^C","test-compiled/print/foo.cljc","^G",32,"^M",["^I",[["^12","^1;","~$p__25273"]]],"^N",null,"^O",["^I",[null,null]],"^E",1,"^D",141,"^F",141,"^P",3,"^Q",true,"^H",["^I",["^J",["^I",[["^12","^1;",["^ ","^14",["^15","^1<","^16"],"^17",["^ ","^15",[],"^1<",true,"^16",false]]]]]]]],"^5",["^ ","^6","~$print.foo/*print-fn*","^C","test-compiled/print/foo.cljc","^D",10,"^E",1,"^F",10,"^G",26,"~:dynamic",true,"^B",["^ ","^C","/Users/matus/www/district0x/contribution/test-compiled/print/foo.cljc","^D",10,"^E",16,"^F",10,"^G",26,"^1@",true]],"~$parse-item",["^ ","^6","~$print.foo/parse-item","^C","test-compiled/print/foo.cljc","^D",58,"^E",1,"^F",58,"^G",21,"^B",["^ ","^C","/Users/matus/www/district0x/contribution/test-compiled/print/foo.cljc","^D",58,"^E",11,"^F",58,"^G",21]],"~$*enabled*",["^ ","^6","~$print.foo/*enabled*","^C","test-compiled/print/foo.cljc","^D",11,"^E",1,"^F",11,"^G",25,"^1@",true,"^B",["^ ","^C","/Users/matus/www/district0x/contribution/test-compiled/print/foo.cljc","^D",11,"^E",16,"^F",11,"^G",25,"^1@",true]],"~$single-destructuring-arg->form+name",["^ ","^A",null,"^B",["^ ","^C","/Users/matus/www/district0x/contribution/test-compiled/print/foo.cljc","^D",13,"^E",17,"^F",13,"^G",52,"^U",true,"^H",["^I",["^J",["^I",[["~$arg-form"]]]]],"^Y","Turns any one binding arg (which may be a destructuring binding) into a vector\n  where the left elem is the arg with a possible :as added to it.\n  And the rght side is the symbol referring to the arg itself."],"^U",true,"^6","~$print.foo/single-destructuring-arg->form+name","^L",false,"^C","test-compiled/print/foo.cljc","^G",52,"^M",["^I",[["^1F"]]],"^N",null,"^O",["^I",[null,null]],"^E",1,"^D",13,"^F",13,"^P",1,"^Q",true,"^H",["^I",["^J",["^I",[["^1F"]]]]],"^Y","Turns any one binding arg (which may be a destructuring binding) into a vector\n  where the left elem is the arg with a possible :as added to it.\n  And the rght side is the symbol referring to the arg itself."],"~$print-and-return",["^ ","^A",null,"^B",["^ ","^C","/Users/matus/www/district0x/contribution/test-compiled/print/foo.cljc","^D",40,"^E",7,"^F",40,"^G",23,"^H",["^I",["^J",["^I",[["~$&","~$xs"]]]]],"^Y","Diagnostic tool for printing the result of evaluating an s-expression.\n   Any initial args over 1, are printed as strings, and generally used as a label.","~:top-fn",["^ ","^L",true,"^P",0,"^M",[["^I",["^1I"]]],"^H",["^I",[["~$&","^1I"]]],"^O",["^I",[null]]]],"^6","~$print.foo/print-and-return","^L",true,"^C","test-compiled/print/foo.cljc","^G",23,"^1J",["^ ","^L",true,"^P",0,"^M",[["^I",["^1I"]]],"^H",["^I",[["~$&","^1I"]]],"^O",["^I",[null]]],"^M",[["^I",["^1I"]]],"^N",null,"^O",["^I",[null]],"^E",1,"^D",40,"^F",40,"^P",0,"^Q",true,"^H",["^I",[["~$&","^1I"]]],"^Y","Diagnostic tool for printing the result of evaluating an s-expression.\n   Any initial args over 1, are printed as strings, and generally used as a label."]],"~:require-macros",["^ ","^<","^=","^=","^="],"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~$cond->>","~$print.foo/print-cond->>","~$print.foo/print-let","~$print.foo/print-defn","~$print.foo/print-cond->","~$symbol-for-destructured-arg","~$print.foo/print-if","~:else","~$cljs.core/->","~:print.foo/timings","~:default","~:as","~$let","~$->","~$print.foo/print-defn-","~$print.foo/print->","~$print.foo/print->>","~:summarize?","~:vector","~$defn","~$if","~:middleware-elapsed","~:sym","~:middleware","~$cljs.core/cond","^1=","~$cond->","~:list","~$defn-","~:middleware-timings","~$cond","~:get-in","^J","~:set","~:hierarchy","^1K","~:map","~:timings?","~$->>"]],"~:order",["^1T","^1Z","^1V","^2C","^2=","^25","^2B","^2D","^29","^1Y","^1K","^J","^20","^22","^2F","^23","^2<","^1S","^1O","^1P","^1[","^1Q","^27","^1U","^2@","^2;","^26","^1R","^2>","^21","^2A","^24","^2E","^1X","^2:","^28","^2?","^1=","^1W"]],"^Y","Macros for printing diagnostic information while debugging or developing."]